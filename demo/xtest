#!/bin/bash

echo "============================================================================================================"
echo " Test1: Use the -1, -2 options to assign reads files."
echo "============================================================================================================"
rm -rf testout1
rm -rf processed_reads
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -1 input/reads1_200.fq -2 input/reads2_200.fq -z 200 -r ./processed_reads -x 15000 -o testout1

echo "============================================================================================================"
echo " Test2: Use a cDNA as query input."
echo "============================================================================================================"
rm -rf testout2
# Because we have existing pre-processed reads, we do not need to specify the number of reads per split file with -x.
../bin/SRAssembler -q input/cdna -t dna -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout2

echo "============================================================================================================"
echo " Test3: Use two libraries. Only the second library still needs to be processed."
echo "============================================================================================================"
rm -rf testout3
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp_1kb.conf -r ./processed_reads -x 15000 -o testout3

echo "============================================================================================================"
echo " Test4: Previous example, but using the MPI implementation."
echo "============================================================================================================"
rm -rf testout4
# Force it to go 3 rounds or it will end after one.
mpirun -n 4 ../bin/SRAssembler_MPI -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp_1kb.conf -r ./processed_reads -o testout4 -n 3 -w

echo "============================================================================================================"
echo " Test5.1: Stop after 3 rounds of assembly. Then continue the current assembly with a new SRAssembler run."
echo "============================================================================================================"
rm -rf testout5 testout5.1 testout5.2 testout5.3
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout5 -n 3
cp -r testout5 testout5.1

echo "============================================================================================================"
echo " Test5.2: Re-run the previous command, but set -n to 7. The assembly will start with round 4."
echo "============================================================================================================"
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout5 -n 7
cp -r testout5 testout5.2

echo "============================================================================================================"
echo " Test5.3: Re-run the previous command, but use -y to force SRAssembler to start from scratch."
echo "============================================================================================================"
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout5 -n 7 -y
mv testout5 testout5.3

echo "============================================================================================================"
echo " Test6: Use GeneSeqer as the spliced alignment program (-S 0)."
echo "============================================================================================================"
rm -rf testout6
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout6 -S 0

echo "============================================================================================================"
echo " Test7: Use Abyss as the assembly program (-A 1)."
echo "============================================================================================================"
rm -rf testout7
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp_1kb.conf -r ./processed_reads -o testout7 -A 1

echo "============================================================================================================"
echo " Test8: Previous example, but using the MPI implementation."
echo "============================================================================================================"
rm -rf testout8
mpirun -n 4 ../bin/SRAssembler_MPI -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp_1kb.conf -r ./processed_reads -o testout8 -A 1

echo "============================================================================================================"
echo " Test9: Looking for potentially better alignments ..."
echo "         Use higher score (-e 0.6) and coverage (-c 0.9) values to declare spliced alignment hits."
echo "         Only report contigs of at least 7000 nucleotides."
echo "         Run the Snap ab initio gene prediction program on the final contigs (-G 1)."
echo "============================================================================================================"
rm -rf testout9
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout9 -e 0.6 -c 0.9 -m 7000 -G 1

echo "============================================================================================================"
echo " Test10: Pre-process reads only (-P)."
echo "============================================================================================================"
rm -rf testout10
rm -rf processed_reads
../bin/SRAssembler -l libraries_200bp.conf -r ./processed_reads -x 15000 -o testout10 -P

echo "============================================================================================================"
echo " Test11: Remove unrelated contigs and reads every 2 rounds (-b 2)."
echo "============================================================================================================"
rm -rf testout11
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout11 -b 2

echo "============================================================================================================"
echo " Test12: Assemble contigs only from round 3 onward (-a 3)."
echo "============================================================================================================"
rm -rf testout12
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout12 -a 3

echo "============================================================================================================"
echo " Test13: Do not check if the query genes are assembled until the last round (-w)."
echo "============================================================================================================"
rm -rf testout13
# Here we specify that SRAssembler should continue for 13 rounds because it causes it to hit the default maximum contig length (10000 bp).
../bin/SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp.conf -r ./processed_reads -o testout13 -n 13 -w -M 10000
