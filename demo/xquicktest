#!/bin/bash
set -uo pipefail
# This script will test SRAssembler and SRAssembler_MPI with basic options and report if they produce the expected output.
# If the script is given the argument 'defaultpath', it will look for SRAssembler in the local PATH rather than using the version compiled from the git.

if [ $# -lt 1 ]; then
	bindir=../bin/
else
	if [ $1 == defaultpath ]; then
		bindir=""
	else
		echo "Usage: $0 [defaultpath]"
		exit
	fi
fi


echo "============================================================================================================"
echo " Test1: Use the -1, -2 options to assign reads files."
echo "============================================================================================================"
out=testout1
rm -rf $out
rm -rf processed_reads
${bindir}SRAssembler -q input/LOC_Os06g04560.pep -p SRAssembler.conf -1 input/reads1_200.fq -2 input/reads2_200.fq -Z 200 -r ./processed_reads -R 15000 -o $out
echo "Checking results against standards..."
diff -qs standards/${out}.html ${out}/summary.html

echo "============================================================================================================"
echo ' Test "4": Use the MPI implementation, read library specifications from conf file (only the second, new'
echo "           library will be pre-processed)."
echo "============================================================================================================"
# Outputs to testout4 to maintain congruity with the complete test suite.
out=testout4
rm -rf $out
mpirun -np 4 ${bindir}SRAssembler_MPI -q input/LOC_Os06g04560.pep -p SRAssembler.conf -l libraries_200bp_1kb.conf -r ./processed_reads -R 15000 -o $out -E 2
echo "Checking results against standards..."
diff -qs standards/${out}.html ${out}/summary.html

echo "============================================================================================================"
echo " Confirm results of tests."
echo "============================================================================================================"
for file in testout{1,4}; do
    diff -qs standards/${file}.html ${file}/summary.html
done

